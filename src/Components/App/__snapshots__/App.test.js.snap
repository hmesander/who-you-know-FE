// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`APP TESTS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    history=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <div
                    className="title-container"
          >
                    <h1
                              className="App-title"
                    >
                              Who
                              <span
                                        className="logo"
                              >
                                        you
                              </span>
                              know.
                    </h1>
          </div>
          <div
                    className="login-container"
          >
                    <p
                              className="App-intro"
                    >
                              To get started, please login.
                    </p>
                    <button
                              className="buttons login-button"
                              onClick={[Function]}
                    >
                              Login
                    </button>
          </div>
</header>,
        <Route
          path="/callback"
          render={[Function]}
/>,
        <Route
          exact={true}
          path="/sort"
          render={[Function]}
/>,
        <Route
          exact={true}
          path="/play"
          render={[Function]}
/>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="title-container"
>
              <h1
                            className="App-title"
              >
                            Who
                            <span
                                          className="logo"
                            >
                                          you
                            </span>
                            know.
              </h1>
</div>,
            <div
              className="login-container"
>
              <p
                            className="App-intro"
              >
                            To get started, please login.
              </p>
              <button
                            className="buttons login-button"
                            onClick={[Function]}
              >
                            Login
              </button>
</div>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="App-title"
>
                Who
                <span
                                className="logo"
                >
                                you
                </span>
                know.
</h1>,
              "className": "title-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Who",
                  <span
                    className="logo"
>
                    you
</span>,
                  "know.",
                ],
                "className": "App-title",
              },
              "ref": null,
              "rendered": Array [
                "Who",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "you",
                    "className": "logo",
                  },
                  "ref": null,
                  "rendered": "you",
                  "type": "span",
                },
                "know.",
              ],
              "type": "h1",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="App-intro"
>
                  To get started, please login.
</p>,
                <button
                  className="buttons login-button"
                  onClick={[Function]}
>
                  Login
</button>,
              ],
              "className": "login-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "To get started, please login.",
                  "className": "App-intro",
                },
                "ref": null,
                "rendered": "To get started, please login.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Login",
                  "className": "buttons login-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Login",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "path": "/callback",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/sort",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/play",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <div
                        className="title-container"
            >
                        <h1
                                    className="App-title"
                        >
                                    Who
                                    <span
                                                className="logo"
                                    >
                                                you
                                    </span>
                                    know.
                        </h1>
            </div>
            <div
                        className="login-container"
            >
                        <p
                                    className="App-intro"
                        >
                                    To get started, please login.
                        </p>
                        <button
                                    className="buttons login-button"
                                    onClick={[Function]}
                        >
                                    Login
                        </button>
            </div>
</header>,
          <Route
            path="/callback"
            render={[Function]}
/>,
          <Route
            exact={true}
            path="/sort"
            render={[Function]}
/>,
          <Route
            exact={true}
            path="/play"
            render={[Function]}
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="title-container"
>
                <h1
                                className="App-title"
                >
                                Who
                                <span
                                                className="logo"
                                >
                                                you
                                </span>
                                know.
                </h1>
</div>,
              <div
                className="login-container"
>
                <p
                                className="App-intro"
                >
                                To get started, please login.
                </p>
                <button
                                className="buttons login-button"
                                onClick={[Function]}
                >
                                Login
                </button>
</div>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1
                  className="App-title"
>
                  Who
                  <span
                                    className="logo"
                  >
                                    you
                  </span>
                  know.
</h1>,
                "className": "title-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Who",
                    <span
                      className="logo"
>
                      you
</span>,
                    "know.",
                  ],
                  "className": "App-title",
                },
                "ref": null,
                "rendered": Array [
                  "Who",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "you",
                      "className": "logo",
                    },
                    "ref": null,
                    "rendered": "you",
                    "type": "span",
                  },
                  "know.",
                ],
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="App-intro"
>
                    To get started, please login.
</p>,
                  <button
                    className="buttons login-button"
                    onClick={[Function]}
>
                    Login
</button>,
                ],
                "className": "login-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "To get started, please login.",
                    "className": "App-intro",
                  },
                  "ref": null,
                  "rendered": "To get started, please login.",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Login",
                    "className": "buttons login-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/callback",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/sort",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/play",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
